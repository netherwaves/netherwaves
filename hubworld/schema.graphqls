"""Transform Timestamp types into string representations"""
directive @date(
  """Date formatting"""
  as: String = "r"

  """
  The full name of the timezone, defaults to GMT. (E.g., America/New_York)
  """
  timezone: String = "GMT"

  """A standard format to use, overrides the `as` argument"""
  format: DateFormatTypes

  """The locale to use when formatting the date"""
  locale: String
) on FIELD

type About implements EntryInterface & ElementInterface {
  id: Int!
  author: User!
  title: String!
  slug: String!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  expiryDate: Timestamp
  postDate: Timestamp
  enabled: Boolean!
  status: String!
  uri: String
  url: String
  section: Section
  type: EntryType
  ancestors: [EntryInterface]
  children(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [EntryInterface]
  descendants: [EntryInterface]
  hasDescendants: Boolean!
  level: Int
  parent: EntryInterface
  siblings: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
  elementType: String
  infoFrame(type: String, limit: Int): [InfoFrameUnion]
}

type AssetFocalPoint {
  x: Float
  y: Float
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type CategoryConnection {
  totalCount: Int!
  pageInfo: PageInfo
  edges: [CategoryEdge]
  categories: [CategoryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type CategoryEdge {
  cursor: String
  node: CategoryInterface
  children(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): CategoryConnection
  relatedEntries(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): EntryConnection
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type CategoryGroup {
  id: Int
  name: String
  handle: String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

enum CategoryGroupsEnum {
  topics
  workTypes
}

interface CategoryInterface {
  id: Int!
  title: String!
  slug: String
  uri: String
  level: Int
  group: CategoryGroup
  children(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [CategoryInterface]
  childrenConnection(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): CategoryConnection
  parent: CategoryInterface
  next: CategoryInterface
  nextSibling: CategoryInterface
  prev: CategoryInterface
  prevSibling: CategoryInterface
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type Contact implements EntryInterface & ElementInterface {
  id: Int!
  author: User!
  title: String!
  slug: String!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  expiryDate: Timestamp
  postDate: Timestamp
  enabled: Boolean!
  status: String!
  uri: String
  url: String
  section: Section
  type: EntryType
  ancestors: [EntryInterface]
  children(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [EntryInterface]
  descendants: [EntryInterface]
  hasDescendants: Boolean!
  level: Int
  parent: EntryInterface
  siblings: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
  elementType: String
}

enum CropFormatInputEnum {
  jpg
  gif
  png
  Auto
}

input CropInputObject {
  width: Int
  height: Int
  quality: Int
  position: PositionInputEnum
  format: CropFormatInputEnum
}

enum DateFormatTypes {
  """Atom feeds"""
  atom

  """HTTP cookies"""
  cookie

  """ISO-8601 spec"""
  iso8601

  """RFC-822 spec"""
  rfc822

  """RFC-850 spec"""
  rfc850

  """RFC-1036 spec"""
  rfc1036

  """RFC-1123 spec"""
  rfc1123

  """RFC-2822 spec"""
  rfc2822

  """RFC-3339 spec"""
  rfc3339

  """RSS feed"""
  rss

  """W3C spec"""
  w3c
}

interface ElementInterface {
  elementType: String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type EntryConnection {
  totalCount: Int!
  pageInfo: PageInfo
  edges: [EntryEdge]
  entries: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type EntryDraftConnection {
  totalCount: Int!
  pageInfo: PageInfo
  edges: [EntryDraftEdge]
  entries: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type EntryDraftEdge {
  cursor: String
  node: EntryInterface
  draftInfo: EntryDraftInfo
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type EntryDraftInfo {
  draftId: Int
  name: String
  notes: String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type EntryEdge {
  cursor: String
  node: EntryInterface
  drafts: EntryDraftConnection
  relatedEntries(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): EntryConnection
  relatedCategories(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): CategoryConnection
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

interface EntryInterface {
  id: Int!
  author: User!
  title: String!
  slug: String!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  expiryDate: Timestamp
  postDate: Timestamp
  enabled: Boolean!
  status: String!
  uri: String
  url: String
  section: Section
  type: EntryType
  ancestors: [EntryInterface]
  children(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [EntryInterface]
  descendants: [EntryInterface]
  hasDescendants: Boolean!
  level: Int
  parent: EntryInterface
  siblings: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type EntryType {
  id: Int!
  name: String!
  handle: String!
  graphQlTypeName: String!
  fields: [Field]!
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

enum EntryTypesEnum {
  About
  Contact
  Navigation
  News
  NewsIndex
  Works
}

type Field {
  name: String
  handle: String
  fieldType: String
  settings: String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type GlobalsSet {
  socials: Socials
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

input InfoFrameInput {
  id: String
  enabled: Boolean
  textFrame: InfoFrameTextFrameInput
}

type InfoFrameTextFrame {
  id: String
  enabled: Boolean
  frameTitle: String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
  frameContent: RedactorFieldData
}

input InfoFrameTextFrameInput {
  frameTitle: String
  frameContent: String
}

"""A union of possible blocks types"""
union InfoFrameUnion = InfoFrameTextFrame

type Mutation {
  """A sample mutation. Doesn't actually save anything."""
  helloWorld: String

  """Create or update existing About."""
  upsertAbout(id: Int, siteId: Int, authorId: Int, title: String, slug: String, enabled: Boolean, postDate: Timestamp, expiryDate: Timestamp, parentId: Int, query: MutationQuery, infoFrame: [InfoFrameInput]): About

  """Create or update existing Contact."""
  upsertContact(id: Int, siteId: Int, authorId: Int, title: String, slug: String, enabled: Boolean, postDate: Timestamp, expiryDate: Timestamp, parentId: Int, query: MutationQuery): Contact

  """Create or update existing Navigation."""
  upsertNavigation(id: Int, siteId: Int, authorId: Int, title: String, slug: String, enabled: Boolean, postDate: Timestamp, expiryDate: Timestamp, parentId: Int, query: MutationQuery, href: String): Navigation

  """Create or update existing News."""
  upsertNews(id: Int, siteId: Int, authorId: Int, title: String, slug: String, enabled: Boolean, postDate: Timestamp, expiryDate: Timestamp, parentId: Int, query: MutationQuery, body: String, topics: [TopicsCategoryInput], seo: String): News

  """Create or update existing NewsIndex."""
  upsertNewsIndex(id: Int, siteId: Int, authorId: Int, title: String, slug: String, enabled: Boolean, postDate: Timestamp, expiryDate: Timestamp, parentId: Int, query: MutationQuery, seo: String): NewsIndex

  """Create or update existing Works."""
  upsertWorks(id: Int, siteId: Int, authorId: Int, title: String, slug: String, enabled: Boolean, postDate: Timestamp, expiryDate: Timestamp, parentId: Int, query: MutationQuery, workSubtitle: String, body: String, seo: String, topics: [TopicsCategoryInput], workYear: String, workClient: String, workType: [WorkTypeCategoryInput]): Works
  upsertSocialsGlobals(email: String, bandcamp: String, soundcloud: String, twitter: String, github: String): Socials
  upsertUser(id: Int, firstName: String, lastName: String, username: String, email: String, permissions: [String]): User
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

input MutationQuery {
  after: String
  ancestorOf: Int
  ancestorDist: Int
  archived: Boolean
  authorGroup: String
  authorGroupId: Int
  authorId: [Int]
  before: String
  level: Int
  localeEnabled: Boolean
  descendantOf: Int
  descendantDist: Int
  fixedOrder: Boolean
  id: [Int]
  idNot: [Int]
  limit: Int
  site: String
  siteId: Int
  nextSiblingOf: Int
  offset: Int
  order: String
  orderBy: String
  positionedAfter: Int
  positionedBefore: Int
  postDate: String
  dateCreated: String
  dateUpdated: String
  prevSiblingOf: Int
  relatedTo: [RelatedToInputType]
  orRelatedTo: [RelatedToInputType]
  search: String
  section: [SectionsEnum]
  siblingOf: Int
  slug: String
  status: String
  title: String
  type: [EntryTypesEnum]
  uri: String
  address: String
  bandcamp: String
  body: String
  workClient: String
  email: String
  github: String
  phone: String
  place: String
  postalCode: String
  seo: String
  soundcloud: String
  workSubtitle: String
  topics: String
  twitter: String
  workType: String
  href: String
  workYear: String
}

enum NamedTransformsEnum {
  Empty
}

type Navigation implements EntryInterface & ElementInterface {
  id: Int!
  author: User!
  title: String!
  slug: String!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  expiryDate: Timestamp
  postDate: Timestamp
  enabled: Boolean!
  status: String!
  uri: String
  url: String
  section: Section
  type: EntryType
  ancestors: [EntryInterface]
  children(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [EntryInterface]
  descendants: [EntryInterface]
  hasDescendants: Boolean!
  level: Int
  parent: EntryInterface
  siblings: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
  elementType: String
  href: String
}

type News implements EntryInterface & ElementInterface {
  id: Int!
  author: User!
  title: String!
  slug: String!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  expiryDate: Timestamp
  postDate: Timestamp
  enabled: Boolean!
  status: String!
  uri: String
  url: String
  section: Section
  type: EntryType
  ancestors: [EntryInterface]
  children(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [EntryInterface]
  descendants: [EntryInterface]
  hasDescendants: Boolean!
  level: Int
  parent: EntryInterface
  siblings: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
  elementType: String
  body: RedactorFieldData
  topics: [TopicsCategory]
  topicsConnection: CategoryConnection
  seo: String
}

type NewsIndex implements EntryInterface & ElementInterface {
  id: Int!
  author: User!
  title: String!
  slug: String!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  expiryDate: Timestamp
  postDate: Timestamp
  enabled: Boolean!
  status: String!
  uri: String
  url: String
  section: Section
  type: EntryType
  ancestors: [EntryInterface]
  children(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [EntryInterface]
  descendants: [EntryInterface]
  hasDescendants: Boolean!
  level: Int
  parent: EntryInterface
  siblings: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
  elementType: String
  seo: String
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  currentPage: Int
  totalPages: Int
  first: Int
  last: Int
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

enum PositionInputEnum {
  topLeft
  topCenter
  topRight
  centerLeft
  centerCenter
  centerRight
  bottomLeft
  bottomCenter
  bottomRight
}

type Query {
  helloWorld: String
  ping: String
  sites(handle: String, id: Int, primary: Boolean): [Site]
  entries(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [EntryInterface]
  entriesConnection(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): EntryConnection
  entry(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): EntryInterface
  draft(draftId: Int!, after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): EntryInterface
  assets(filename: String, fixedOrder: Boolean, folderId: Int, height: Int, id: Int, kind: String, limit: Int, locale: String, offset: Int, order: String, search: String, size: Int, title: String, sourceId: Int, width: Int, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [VolumeInterface]
  globals(site: String, siteId: Int): GlobalsSet
  categories(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [CategoryInterface]
  category(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): CategoryInterface
  categoriesConnection(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): CategoryConnection
  users(admin: Boolean, email: String, firstName: String, group: String, groupId: String, id: Int, lastLoginDate: Int, lastName: String, limit: Int, offset: Int, order: String, orderBy: String, search: String, username: String, address: String, bandcamp: String, body: String, workClient: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [User]
  user(admin: Boolean, email: String, firstName: String, group: String, groupId: String, id: Int, lastLoginDate: Int, lastName: String, limit: Int, offset: Int, order: String, orderBy: String, search: String, username: String, address: String, bandcamp: String, body: String, workClient: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): User
  sections: [Section]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type RedactorFieldData {
  totalPages: Int
  content(page: Int): String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

input RelatedToInputType {
  element: [Int]
  elementIsEdge: Boolean
  sourceElement: [Int]
  sourceElementIsEdge: Boolean
  targetElement: [Int]
  targetElementIsEdge: Boolean
  field: String
  sourceLocale: String
}

type Section {
  id: Int!
  structureId: Int
  name: String!
  handle: String!
  type: String!
  siteSettings: [SectionSiteSettings]
  maxLevels: Int
  hasUrls: Boolean
  enableVersioning: Boolean
  entryTypes: [EntryType]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type SectionSiteSettings {
  id: Int!
  siteId: Int!
  enabledByDefault: Boolean!
  hasUrls: Boolean!
  uriFormat: String
  template: String!
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

enum SectionsEnum {
  about
  contact
  navigation
  news
  newsIndex
  works
}

type Site {
  id: Int
  name: String
  handle: String
  baseUrl: String
  hasUrls: Boolean
  language: String
  originalBaseUrl: String
  originalName: String
  sortOrder: String
  primary: Boolean
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type Socials {
  email: String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
  bandcamp: String
  soundcloud: String
  twitter: String
  github: String
}

"""
The `Timestamp` scalar type represents a unix timestamp. The Timestamp type can
be converted to a human friendly format with the `@date` directive.

    {
      entries {
        dateCreated @date(as:"F j, Y")
      }
    }
"""
scalar Timestamp

type TopicsCategory implements CategoryInterface {
  id: Int!
  title: String!
  slug: String
  uri: String
  level: Int
  group: CategoryGroup
  children(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [CategoryInterface]
  childrenConnection(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): CategoryConnection
  parent: CategoryInterface
  next: CategoryInterface
  nextSibling: CategoryInterface
  prev: CategoryInterface
  prevSibling: CategoryInterface
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

input TopicsCategoryInput {
  id: Int
  title: String
  slug: String
}

type UploadsVolume implements VolumeInterface {
  id: Int
  url(transform: NamedTransformsEnum, crop: CropInputObject, fit: CropInputObject, stretch: CropInputObject): String
  width(transform: NamedTransformsEnum, crop: CropInputObject, fit: CropInputObject, stretch: CropInputObject): String
  height(transform: NamedTransformsEnum, crop: CropInputObject, fit: CropInputObject, stretch: CropInputObject): String
  size: Int
  folder: VolumeFolder
  volumeId: String
  mimeType: String
  kind: String
  title: String
  extension: String
  filename: String
  dateCreatedTimestamp: Timestamp
  dateCreated: Timestamp
  dateUpdatedTimestamp: Timestamp
  dateUpdated: Timestamp
  focalPoint: AssetFocalPoint
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type User {
  id: Int!
  name: String!
  fullName: String
  friendlyName: String!
  firstName: String
  lastName: String
  username: String!
  email: String!
  admin: Boolean!
  isCurrent: Boolean!
  preferredLocale: String
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  lastLoginDate: Timestamp!
  permissions: [String]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type VolumeFolder {
  id: Int
  volumeId: Int
  name: String
  path: String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

interface VolumeInterface {
  id: Int
  url(transform: NamedTransformsEnum, crop: CropInputObject, fit: CropInputObject, stretch: CropInputObject): String
  width(transform: NamedTransformsEnum, crop: CropInputObject, fit: CropInputObject, stretch: CropInputObject): String
  height(transform: NamedTransformsEnum, crop: CropInputObject, fit: CropInputObject, stretch: CropInputObject): String
  size: Int
  folder: VolumeFolder
  volumeId: String
  mimeType: String
  kind: String
  title: String
  extension: String
  filename: String
  dateCreatedTimestamp: Timestamp
  dateCreated: Timestamp
  dateUpdatedTimestamp: Timestamp
  dateUpdated: Timestamp
  focalPoint: AssetFocalPoint
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

input WorkTypeCategoryInput {
  id: Int
  title: String
  slug: String
}

type WorkTypesCategory implements CategoryInterface {
  id: Int!
  title: String!
  slug: String
  uri: String
  level: Int
  group: CategoryGroup
  children(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [CategoryInterface]
  childrenConnection(ancestorOf: Int, ancestorDist: Int, level: Int, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, group: [CategoryGroupsEnum], groupId: Int, id: [Int], indexBy: String, limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, prevSiblingOf: Int, search: String, siblingOf: Int, slug: String, title: String, uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): CategoryConnection
  parent: CategoryInterface
  next: CategoryInterface
  nextSibling: CategoryInterface
  prev: CategoryInterface
  prevSibling: CategoryInterface
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}

type Works implements EntryInterface & ElementInterface {
  id: Int!
  author: User!
  title: String!
  slug: String!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  expiryDate: Timestamp
  postDate: Timestamp
  enabled: Boolean!
  status: String!
  uri: String
  url: String
  section: Section
  type: EntryType
  ancestors: [EntryInterface]
  children(after: String, ancestorOf: Int, ancestorDist: Int, archived: Boolean, authorGroup: String, authorGroupId: Int, authorId: [Int], before: String, level: Int, localeEnabled: Boolean, descendantOf: Int, descendantDist: Int, fixedOrder: Boolean, id: [Int], idNot: [Int], limit: Int, site: String, siteId: Int, nextSiblingOf: Int, offset: Int, order: String, orderBy: String, positionedAfter: Int, positionedBefore: Int, postDate: String, dateCreated: String, dateUpdated: String, prevSiblingOf: Int, relatedTo: [RelatedToInputType], orRelatedTo: [RelatedToInputType], search: String, section: [SectionsEnum], siblingOf: Int, slug: String, status: String, title: String, type: [EntryTypesEnum], uri: String, address: String, bandcamp: String, body: String, workClient: String, email: String, github: String, phone: String, place: String, postalCode: String, seo: String, soundcloud: String, workSubtitle: String, topics: String, twitter: String, workType: String, href: String, workYear: String): [EntryInterface]
  descendants: [EntryInterface]
  hasDescendants: Boolean!
  level: Int
  parent: EntryInterface
  siblings: [EntryInterface]
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
  elementType: String
  workSubtitle: String
  body: RedactorFieldData
  seo: String
  topics: [TopicsCategory]
  topicsConnection: CategoryConnection
  workYear: String
  workClient: String
  workType: [WorkTypesCategory]
  workTypeConnection: CategoryConnection
}

type seomaticData {
  metaTitleContainer: String
  metaTagContainer: String
  metaLinkContainer: String
  metaScriptContainer: String
  metaJsonLdContainer: String
  seomatic(siteId: Int, uri: String, asArray: Boolean): seomaticData
}
